---
import { YouTube } from "astro-embed";
import Callout from "../../components/Callout.astro";
import HeadingTree from "../../components/HeadingTree.astro";
import Image from "../../components/Image.astro";
import Main from "../../components/Main.astro";
import Spoiler from "../../components/Spoiler.astro";
import Tag from "../../components/Tag.astro";
import SiteLayout from "../../layouts/SiteLayout.astro";
import { getPosts } from "../../posts.ts";
import { buildHeadingTree } from "../../utils.ts";

export async function getStaticPaths() {
  const posts = await getPosts();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
const headingTree = buildHeadingTree(headings);
---

<SiteLayout title={post.data.title}>
  <Main class="overflow-x-clip">
    <header
      class="mb-10"
    >
      <h1 class="res-text-4xl !leading-10 font-bold font-display mb-3 dark:text-slate-300">
        {post.data.title}
      </h1>
      <div class="flex items-center text-sm">
        <span class="text-slate-700 font-italic uppercase dark:text-slate-500">
          {
            post.data.publishDate.toLocaleString("UTC", {
              dateStyle: "long",
              timeZone: "UTC",
            })
          }
          {post.data.updatedDate ? ` (updated ${post.data.updatedDate})` : null}
        </span>
        {
          post.collection === "sample-posts" ? (
            <Tag class="ml-2">sample</Tag>
          ) : null
        }
      </div>
    </header>
    <article class="markdown">
      <Content components={{ Callout, Image, Spoiler, YouTube }} />
    </article>
  </Main>
  {
    post.data.showToc ? (
      <aside class="flex-none text-xs hidden sticky top-[3rem] overflow-y-scroll h-[calc(100vh-6rem)] xl:block">
        <header class="text-md font-semibold mb-4">Table of Contents</header>
        <HeadingTree tree={headingTree} />
      </aside>
    ) : null
  }
</SiteLayout>
